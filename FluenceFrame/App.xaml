<Application x:Class="FluenceFrame.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FluenceFrame"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Light Theme Color Palette with Fluence Map Aesthetic -->
            <Color x:Key="PrimaryColor">#FFFFF3E0</Color>
            <!-- Soft warm background (off-white with a hint of orange) -->
            <Color x:Key="SecondaryColor">#FFFF9800</Color>
            <!-- Vivid orange for secondary elements -->
            <Color x:Key="AccentColor">#FFD84315</Color>
            <!-- Deep red-orange for accents -->
            <Color x:Key="TextColor">#FF3D2C1E</Color>
            <!-- Dark reddish-brown for readable text -->
            <Color x:Key="BackgroundColor">#FFFFFBF0</Color>
            <!-- Very light cream for main backgrounds -->
            <Color x:Key="HighlightColor">#FFFFC107</Color>
            <!-- Bright yellow for highlights -->
            <Color x:Key="ButtonColor">#FFFF5722</Color>
            <!-- Intense orange-red for buttons -->
            <Color x:Key="SuccessColor">#FF66BB6A</Color>
            <!-- Green for success messages, for contrast -->
            <Color x:Key="ErrorColor">#FFD32F2F</Color>
            <!-- Strong red for errors -->

            <!-- Brushes for the Color Palette -->
            <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
            <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
            <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
            <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
            <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
            <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}"/>
            <SolidColorBrush x:Key="ButtonBrush" Color="{StaticResource ButtonColor}"/>
            <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
            <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}"/>

            <!-- Window Style -->
            <Style TargetType="Window">
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="FontFamily" Value="Segoe UI"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15" Color="#90000000" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- Button Style -->
            <Style TargetType="Button">
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBrush}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ComboBox Style -->
            <Style TargetType="ComboBox">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3"/>
                                <ToggleButton x:Name="ToggleButton"
                                  Focusable="False"
                                  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  HorizontalAlignment="Right"
                                  Width="30">
                                    <Path Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="{StaticResource AccentBrush}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                                </ToggleButton>
                                <ToggleButton x:Name="BodyButton"
                                  Focusable="False"
                                  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  Background="Transparent"
                                  BorderBrush="Transparent"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  Margin="0,0,30,0">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="4,2,25,2"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"/>
                                <Popup x:Name="PART_Popup"
                           AllowsTransparency="True"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Bottom"
                           Focusable="False"
                           PopupAnimation="Slide">
                                    <Grid MaxHeight="200" Background="{StaticResource PrimaryBrush}">
                                        <Border x:Name="DropDownBorder"
                                    Background="{StaticResource PrimaryBrush}"
                                    BorderBrush="{StaticResource AccentBrush}"
                                    BorderThickness="1"
                                    Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}"/>
                                        <ScrollViewer Margin="4,6,4,6">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="ComboBoxItem">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <!-- Ensure text is visible -->
                <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                <!-- Normal state -->
                <Setter Property="Padding" Value="5,2"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <!-- Highlight item when hovered -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource BackgroundBrush}"/>
                    </Trigger>

                    <!-- Highlight selected item -->
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- ProgressBar Style -->
            <Style TargetType="ProgressBar">
                <Setter Property="Height" Value="10"/>
                <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Border Background="{TemplateBinding Background}" 
                CornerRadius="5" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="0.5">
                                <Grid x:Name="PART_Track" ClipToBounds="True" SnapsToDevicePixels="True">
                                    <Rectangle x:Name="PART_Indicator" 
                           Fill="{TemplateBinding Foreground}" 
                           HorizontalAlignment="Left" 
                           RadiusX="5" RadiusY="5"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Setter TargetName="PART_Indicator" Property="Width" Value="0"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" Value="0">
                                    <Setter TargetName="PART_Indicator" Property="Width" Value="0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}" Value="100">
                                    <Setter TargetName="PART_Indicator" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- TextBlock Style -->
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Margin" Value="5,0"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
